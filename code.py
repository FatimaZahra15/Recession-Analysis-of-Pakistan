# -*- coding: utf-8 -*-
"""Code

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S0U1r9Tr0hSPU3Qcn2gclsChHEvMLeCd

Upload the dataset
"""

import pandas as pd

# Load the dataset
gdp_data = pd.read_excel("/content/QGDP.xlsx")
# Display the first few rows of the dataset
print(gdp_data.head())

"""Calculate and Analyze Recession Based on Quarterly GDP Growth"""

# Add a flag for negative growth
gdp_data['Negative Growth'] = gdp_data['GDP Growth rate (Quarterly)'] < 0

# Identify consecutive quarters of negative growth
gdp_data['Consecutive Negative'] = gdp_data['Negative Growth'] & gdp_data['Negative Growth'].shift(1)
# Display the identified recession periods
print("Identified Potential Recession Periods:")

"""Analyze Identified Recession Periods"""

# Filter rows to find the second of two consecutive negative growth rates, indicating a recession
recession_periods = gdp_data[gdp_data['Consecutive Negative']]
print(recession_periods[['Year', 'GDP Growth rate (Quarterly)', 'Consecutive Negative']])

"""Step 3: Analyze the Severity of the Recession"""

# Identify all negative growth periods
negative_periods = gdp_data[gdp_data['Negative Growth']]

# Calculate cumulative sum to identify separate recession periods
negative_periods['Recession Period'] = (negative_periods['Negative Growth'].diff(1) != 0).cumsum()

# Aggregate data to assess severity
recession_severity = negative_periods.groupby('Recession Period').agg(
    Total_Quarters=('Negative Growth', 'sum'),
    Cumulative_Contraction=('GDP Growth rate (Quarterly)', 'sum')
).reset_index()

# Merging to get the years associated with each recession period
recession_severity = recession_severity.merge(
    negative_periods[['Recession Period', 'Year']].drop_duplicates(),
    on='Recession Period',
    how='left'
)
# Print the recession severity analysis
print("Recession Severity Analysis:")
print(recession_severity[['Year', 'Total_Quarters', 'Cumulative_Contraction']])

import matplotlib.pyplot as plt
import matplotlib.dates as mdates

# Assuming 'Year' column is properly formatted as fiscal year or similar,
# for visualization, it might be necessary to parse or adjust it.
# If it's not in datetime format, you'd need to adjust it. For this example,
# let's assume it's already in a suitable format for plotting.

# Plot GDP growth rate
plt.figure(figsize=(12, 6))
plt.plot(gdp_data['Year'], gdp_data['GDP Growth rate (Quarterly)'], marker='o', linestyle='-', color='b', label='GDP Growth Rate')

# Highlight recession periods - using the identified periods
for index, row in recession_periods.iterrows():
    plt.axvspan(row['Year'], row['Year'], color='red', alpha=0.3)  # Adjust this part to correctly span the recession periods

# Improve the x-axis to handle dates (if necessary)
plt.gca().xaxis.set_major_locator(mdates.YearLocator())
plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y'))

plt.xlabel('Year')
plt.ylabel('GDP Growth Rate (%)')
plt.title('Quarterly GDP Growth Rate and Recessions Over Time')
plt.legend()
plt.xticks(rotation=45)  # Rotate dates for better legibility
plt.grid(visible=True)
plt.tight_layout()

plt.show()